name: CD

on:
  workflow_run:
    workflows:
      - CI
    branches:
      - master
    types:
      - completed

jobs:
  build:
    name: Build and Push Docker Container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build Container Configure
        shell: bash
        env:
          DATABASE_HOST: ${{ secrets.NEXFORUM_DATABASE_HOST }}
          DATABASE_NAME: ${{ secrets.NEXFORUM_DATABASE_NAME }}
          DATABASE_USER: ${{ secrets.NEXFORUM_DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.NEXFORUM_DATABASE_PASSWORD }}
          SPHINX_SERVER: ${{ secrets.NEXFORUM_SPHINX_SERVER }}
          REGISTRY_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
          AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
        run: |
          sudo apt-get update && sudo apt-get -y install gettext-base
          envsubst < container/templates/aci-dev.yml > aci-dev.yml

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./container/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/vanilla/container:latest

      - name: Deploy to Azure Container Instance
        uses: azure/CLI@v1
        with:
          azcliversion: 2.7.0
          inlineScript: |
            az container create --resource-group ${{ secrets.RESOURCE_GROUP }} \
              --file aci-dev.yml
